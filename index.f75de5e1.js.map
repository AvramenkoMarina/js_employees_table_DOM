{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst navBar = document.querySelector('thead tr');\nconst tableBody = document.querySelector('tbody');\nconst form = document.createElement('form');\nconst dataAttributes = ['name', 'position', 'office', 'age', 'salary'];\nconst button = document.createElement('button');\nconst page = document.querySelector('body');\n\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nfunction capitalizeFirstLetter(str) {\n  if (str.length === 0) {\n    return str;\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nform.classList.add('new-employee-form');\n\nlet sortWay = true;\n\nconst handleToNumbers = (str) => {\n  return +str.replace(/[^0-9.-]+/g, '');\n};\n\nfunction sortTable(value, columnIndex) {\n  const rowsArray = Array.from(tableBody.querySelectorAll('tr'));\n\n  rowsArray.sort((a, b) => {\n    const cellA = a.cells[columnIndex].innerText.toLowerCase();\n    const cellB = b.cells[columnIndex].innerText.toLowerCase();\n\n    if (sortWay) {\n      switch (value) {\n        case 'name':\n        case 'position':\n        case 'office':\n          return cellA.localeCompare(cellB);\n\n        case 'age':\n          return parseInt(cellA) - parseInt(cellB);\n\n        case 'salary':\n          return handleToNumbers(cellA) - handleToNumbers(cellB);\n\n        default:\n          return null;\n      }\n    } else {\n      switch (value) {\n        case 'name':\n        case 'position':\n        case 'office':\n          return cellB.localeCompare(cellA);\n\n        case 'age':\n          return parseInt(cellB) - parseInt(cellA);\n\n        case 'salary':\n          return handleToNumbers(cellB) - handleToNumbers(cellA);\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  rowsArray.forEach((row) => tableBody.appendChild(row));\n  sortWay = !sortWay;\n}\n\nnavBar.addEventListener('click', (action) => {\n  const activeFilter = action.target.closest('th');\n\n  if (activeFilter) {\n    const value = activeFilter.textContent.toLowerCase().trim();\n    const columnIndex = action.target.cellIndex;\n\n    sortTable(value, columnIndex);\n  }\n});\n\ntableBody.addEventListener('click', (action) => {\n  const clickedRow = action.target.closest('tr');\n\n  if (clickedRow) {\n    tableBody.querySelectorAll('tr').forEach((row) => {\n      row.classList.remove('active');\n    });\n\n    clickedRow.classList.add('active');\n  }\n});\n\nconst handleAddInputs = () => {\n  dataAttributes.forEach((attribute) => {\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n\n    switch (attribute) {\n      case 'name':\n      case 'position':\n        input.type = 'text';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n\n      case 'office':\n        const select = document.createElement('select');\n        const cities = [\n          'Tokyo',\n          'Singapore',\n          'London',\n          'New York',\n          'Edinburgh',\n          'San Francisco',\n        ];\n\n        select.name = attribute;\n        select.required = true;\n        select.dataset.qa = attribute;\n\n        cities.forEach((city) => {\n          const option = document.createElement('option');\n\n          option.value = city;\n          option.textContent = city;\n          select.appendChild(option);\n        });\n\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(select);\n        break;\n\n      case 'age':\n        input.type = 'number';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n\n      case 'salary':\n        input.type = 'number';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n    }\n  });\n};\n\nfunction showNotification (text, type) {\n  const notification = document.createElement('div');\n  const notificationMessage = document.createElement('span');\n\n  notificationMessage.setAttribute('class', 'title');\n  notification.setAttribute('class', 'notification');\n  notification.setAttribute('data-qa', 'notification');\n  notification.style.display = 'flex';\n  notification.style.justifyContent = 'center';\n  notification.style.alignItems = 'center';\n  notification.style.textAlign = 'center';\n  notificationMessage.textContent = text;\n\n  if (type === 'error') {\n    notification.classList.add('error');\n  } else {\n    notification.classList.add('success');\n  }\n\n  notification.append(notificationMessage);\n  page.append(notification);\n\n  setTimeout(() => notification.remove(), 5000);\n}\n\nconst handleAddEmployee = (action) => {\n  action.preventDefault();\n\n  const nameInput = form.querySelector('input[name=\"name\"]');\n  const positionInput = form.querySelector('input[name=\"position\"]');\n  const officeSelect = form.querySelector('select[name=\"office\"]');\n  const ageInput = form.querySelector('input[name=\"age\"]');\n  const salaryInput = form.querySelector('input[name=\"salary\"]');\n\n  const warning = [];\n\n  if (nameInput.value.trim().length < 4) {\n    warning.push('Name should be at least 4 symbols length.');\n  }\n\n  if (!positionInput.value) {\n    warning.push('Position field should be filled.');\n  }\n\n  if (positionInput.value.trim() === '' && positionInput.value) {\n    warning.push('Position field should not contain only spaces.');\n  }\n\n  if (!salaryInput.value) {\n    warning.push('Salary field should be filled.');\n  }\n\n  if (+salaryInput.value < 0) {\n    warning.push('Salary field should be with a positive number.');\n  }\n\n  if (+salaryInput.value === 0) {\n    warning.push('Salary should be bigger than zero.');\n  }\n\n  if (+ageInput.value < 18 || +ageInput.value > 90) {\n    warning.push('Age should be between 18 and 90 y.o.');\n  }\n\n  if (warning.length > 0) {\n    return showNotification(warning.join('\\n'), 'error');\n  }\n\n  const newRow = document.createElement('tr');\n  const newName = document.createElement('td');\n  const newPosition = document.createElement('td');\n  const newOffice = document.createElement('td');\n  const newAge = document.createElement('td');\n  const newSalary = document.createElement('td');\n\n  newName.textContent = capitalizeFirstLetter(nameInput.value.trim());\n  newPosition.textContent = capitalizeFirstLetter(positionInput.value.trim());\n  newOffice.textContent = officeSelect.value;\n  newAge.textContent = ageInput.value;\n  newSalary.textContent = `$${(+salaryInput.value).toLocaleString('en-US')}`;\n\n  newRow.append(newName, newPosition, newOffice, newAge, newSalary);\n  tableBody.append(newRow);\n\n  form.reset();\n\n  return showNotification('Employee successfully added.', 'success');\n};\n\nhandleAddInputs();\nform.appendChild(button);\ndocument.body.appendChild(form);\n\nbutton.addEventListener('click', handleAddEmployee);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}